
package com.example.currFair.api.manager.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import com.example.currFair.api.manager.MessageManager;
import com.example.currFair.api.model.TradeMessage;


public class MessageManagerImpl extends AbstractManagerImpl implements MessageManager
{

	//public static Map<String, List<TradeMessage>> map   ;
	//public static List<TradeMessage> tradeMessagesList;

    public Map<String, List<TradeMessage>> processMessages(List<TradeMessage> tradeMessages)
    {
    	 
    		Map<String, List<TradeMessage>>  map = new java.util.HashMap<String, List<TradeMessage>>();
    	List<TradeMessage> newList;
    	for (TradeMessage tradeMessage : tradeMessages)
    	{
    		String key =tradeMessage.getCurrencyFrom()+"-"+tradeMessage.getCurrencyTo();
    		if(map.get(key) == null)
    		{
    			 newList = new ArrayList<TradeMessage>();
    			newList.add(tradeMessage);
    			map.put(key, newList);
    		}else{
    			newList =map.get(key);
    			newList.add(tradeMessage);
    		}
		}
    	if(tradeMessagesList == null)
    		tradeMessagesList = new ArrayList<TradeMessage>();
    	tradeMessagesList.addAll(tradeMessages);
    	return map;
       
    }
    
    
    public  Map<String, List<TradeMessage>> listMessages(){
    	return map;
    }
   
    public  List<TradeMessage> listMessagesByUserId(String userId)
    {
    	List<TradeMessage> tradeMessages = new ArrayList<TradeMessage>();
    	for (TradeMessage tradeMessage : tradeMessagesList) {
			if(tradeMessage.getUserId().equalsIgnoreCase(userId))
				tradeMessages.add(tradeMessage);
		}
    	return tradeMessagesList;
    }
    
}
